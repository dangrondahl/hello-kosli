name: CD

on:
  push:
    branches:
      - main

env:
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  KOSLI_ORG: "dangrondahl"
  KOSLI_FLOW: "hello-kosli"
  REGISTRY: ghcr.io/dangrondahl
  IMAGE_NAME: ${{ github.repository }}

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: setup kosli
        uses: kosli-dev/setup-cli-action@v2

      - name: Create Kosli Flow
        run: |
          kosli create flow $KOSLI_FLOW \
            --description "A simple Go web server that integrates with Kosli" \
            --org $KOSLI_ORG \
            --template-file .kosli/template.yml

      - name: Begin Kosli Trail
        run: |
          kosli begin trail "${GITHUB_SHA}" \
            --description="CI run for build: ${GITHUB_RUN_NUMBER} on ref: ${GITHUB_REF_NAME}"


      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Make the image fingerprint available for following steps
        id: fingerprint
        run: |
          ARTIFACT_SHA=$( echo ${{ steps.push.outputs.digest }} | sed 's/.*://')
          echo "FINGERPRINT=$ARTIFACT_SHA" >> $GITHUB_OUTPUT

      - name: Attest image evidence to Kosli
        run:
          kosli attest artifact "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
            --fingerprint="${{ steps.fingerprint.outputs.fingerprint }}"
            --name="${KOSLI_FLOW}"
            --trail="${GITHUB_SHA}"

      - name: Attest pull-request evidence to Kosli
        run:
          kosli attest pullrequest github
            --github-token="${{ secrets.GITHUB_TOKEN }}"
            --name=pull-request
            --trail="${GITHUB_SHA}"

      - name: Create Kosli Environment
        run: |
          kosli create environment kind-cluster \
            --type k8s \
            --description "Smoke test environment" \
