name: CD

on:
  push:
    branches:
      - main

env:
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  KOSLI_ORG: "dangrondahl"
  KOSLI_FLOW: "hello-kosli"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KOSLI_ENV: "kind-cluster"
  NAMESPACES: "kosli"

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup kosli
        uses: kosli-dev/setup-cli-action@v2

      - name: Create Kosli Flow
        run: |
          kosli create flow ${{ env.KOSLI_FLOW }} \
            --description "A simple Go web server that integrates with Kosli" \
            --org ${{ env.KOSLI_ORG }} \
            --template-file .kosli/template.yml

      - name: Begin Kosli Trail
        run: |
          kosli begin trail "${{ github.sha }}" \
            --description="CD run for build: ${{ github.run_number }} on ref: ${{ github.ref_name }}"

      - name: Attest pull-request evidence to Kosli
        run:
          kosli attest pullrequest github
            --github-token="${{ secrets.GITHUB_TOKEN }}"
            --name=pull-request
            --trail="${{ github.sha }}"

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5
      - name: Setup kosli
        uses: kosli-dev/setup-cli-action@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_SHA=${{ github.sha }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Make the image fingerprint available for following steps
        id: fingerprint
        run: |
          ARTIFACT_SHA=$( echo ${{ steps.push.outputs.digest }} | sed 's/.*://')
          echo "FINGERPRINT=$ARTIFACT_SHA" >> $GITHUB_OUTPUT

      - name: Attest image evidence to Kosli
        run:
          kosli attest artifact "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
            --fingerprint="${{ steps.fingerprint.outputs.fingerprint }}"
            --name="${{ env.KOSLI_FLOW }}"
            --trail="${{ github.sha }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.30.0
          wait: true
      - name: Setup Kosli CLI
        uses: kosli-dev/setup-cli-action@v2

      - name: Create Kosli Environment
        run: |
          kosli create environment ${{ env.KOSLI_ENV }} \
            --type K8S \
            --description "Smoke test environment" \

      - name: Install and Run Smoke Tests
        run: ./scripts/smoke_test.sh

      - name: Snapshot Environment
        run: |
          kosli snapshot k8s ${{ env.KOSLI_ENV }} \
          --namespaces ${{ env.NAMESPACES }} \
          --api-token ${{ secrets.KOSLI_API_TOKEN }}  \
          --org ${{ env.KOSLI_ORG }}